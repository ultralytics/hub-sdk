# Ultralytics üöÄ AGPL-3.0 License - https://ultralytics.com/license

# HUB-SDK Continuous Integration (CI) GitHub Actions tests

name: HUB-SDK CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  schedule:
    - cron: "0 9 * * *" # runs at 09:00 UTC every day
  workflow_dispatch:

env:
  FIREBASE_CRED: ${{ secrets.FIREBASE_CRED }}
  ULTRALYTICS_HUB_API: ${{ vars.ULTRALYTICS_HUB_API }}
  ULTRALYTICS_HUB_WEB: ${{ vars.ULTRALYTICS_HUB_WEB }}
  BUCKET_NAME: ${{ vars.BUCKET_NAME }}

jobs:
  Docs:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"
          cache: "pip" # caching pip dependencies
      - name: Install Dependencies
        run: |
          pip install -e ".[dev]"
        shell: bash
      - name: Build Docs and Check for Warnings
        run: |
          mkdocs build --strict
        shell: bash

  SBOM:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.x"
      - uses: astral-sh/setup-uv@v6
      - run: |
          uv venv
          uv pip install -e .
        env:
          VIRTUAL_ENV: sbom-env
      - uses: anchore/sbom-action@v0
        with:
          format: spdx-json
          output-file: sbom.spdx.json
          path: sbom-env

  Tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"
      - name: Install dependencies
        run: |
          cd tests
          pip install -r requirements.txt
      - name: Download Test Data
        run: |
          cd tests
          python utils/test_data.py download
      - name: Run pytest
        run: python -m pytest -v -m "smoke" tests

  Summary:
    runs-on: ubuntu-latest
    needs: [Docs, Tests]
    if: always()
    steps:
      - name: Check for failure and notify
        if: (needs.Docs.result == 'failure' || needs.Tests.result == 'failure') && github.repository == 'ultralytics/hub-sdk' && (github.event_name == 'schedule' || github.event_name == 'push') && github.run_attempt == '1'
        uses: slackapi/slack-github-action@v2.1.1
        with:
          webhook-type: incoming-webhook
          webhook: ${{ secrets.SLACK_WEBHOOK_URL_HUBWEB }}
          payload: |
            text: "<!channel> GitHub Actions error for ${{ github.workflow }} ‚ùå\n\n\n*Repository:* https://github.com/${{ github.repository }}\n*Action:* https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}\n*Author:* ${{ github.actor }}\n*Event:* ${{ github.event_name }}\n"
